@using GF.Web.Models
@using GF.Web.Infrastructure
@model AutoReplenishmentViewModel

@{
    ViewBag.Title = "Auto Replenishment Report";
}

<h2 class="report">Auto-Replenishment Report @Html.ActionImage("Help", "Home", null,"~/Images/help.png", "Help")</h2>

<div class="panel">
    <h3 class="report">Results</h3>
    <table id="orderHistory">
        <thead>
            <tr>
                @foreach(var item in Model.Columns){
                    <th>@item.DisplayName</th>
                } 
            </tr>
        </thead>
        <tbody></tbody>
        <tfoot></tfoot>
    </table>
    <div class="table-options">
        @Html.ActionImage("ExportToExcel", "Home", null,"~/Images/excel.png", "Export To Excel")
        @Html.ActionImage("ExportToCSV", "Home", null,"~/Images/csv.png", "Export To CSV")
        @Html.ActionImage("ExportToXML", "Home", null,"~/Images/xml.png", "Export To XML")
        @Html.ActionImage("ExportToPDF", "Home", null,"~/Images/pdf.png", "Export To PDF")
        @Html.ActionImage("Print", "Home", null,"~/Images/print.png", "Print")
    </div>
    <br /><br /><br />
</div>

<script type="text/javascript">
    $(document).ready(function () {
        //http://www.datatables.net
        var viewKey = '@Model.ViewKey';
        var oTables;
        oTables = $('#orderHistory').dataTable({
            "sDom": 'C<"clear">lfrtip',
            "sPaginationType": "full_numbers",
            "aoColumnDefs": [
                 { "bVisible": false, "aTargets": [@Model.Cols] }
            ],
            "bAutoWidth": false,
            "aoColumns": [
                 { "sWidth": "50px" },
                 { "sWidth": "50px" },
                 { "sWidth": "50px" },
                 { "sWidth": "50px" },
                 { "sWidth": "50px" },
                 { "sWidth": "50px" },
                 { "sWidth": "50px" }
            ],
            "bProcessing": true,
            "bServerSide": true,
            "bStateSave": true,
            "bFilter": false,
            "sAjaxSource": '@Url.Content("~/Home/GetAutoReplenishment")',
            "oColVis": { "buttonText": '+/- Columns' },
            "fnServerData": function (url, data, callback, oSettings) {
                var colvis = ' ';
                for (var i = 0; i < oSettings.aoColumns.length; i++) {
                    if (!oSettings.aoColumns[i].bVisible) {
                        colvis += i + ',';
                    }
                }
                data.push({ name: 'sKey', value: viewKey },
               { name: 'sColVis', value: colvis });

                $.ajax({
                    "url": url,
                    "data": data,
                    "success": function (response, status) {
                        console.log(response.criteria);
                        callback(response.dataTable);
                    },
                    "contentType": "application/x-www-form-urlencoded; charset=utf-8",
                    "dataType": "json",
                    "type": "POST",
                    "cache": false,
                    "error": function () {
                        alert("DataTables warning: JSON data from server failed to load or be parsed. " +
                        "This is most likely to be caused by a JSON formatting error.");
                    }
                });
            }
        });
        var oColVis = new ColVis(oTables.fnSettings());
        $('.ColVis_Button').addClass('small-button');
    });
</script>